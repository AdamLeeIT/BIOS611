---
  title: "BIOS 611 HW1 Data visualisation (Chapter 3)"
  author: "(Your full name here)"
  date: "`r format(Sys.time(), '%m/%d/%Y')`"
  output: html_document
---
  *This homework is due September 5th 6pm.*
  
  (This set of exercise is mostly taken from R for Data Science by Garrett Grolemund and Hadley Wickham.)

# Exercise 1

1.  What's gone wrong with this code? Why are the points not blue?

    ```{r}
    library(ggplot2)
    ggplot(data = mpg) + 
      geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
    ```
    
    Answer: 

    ```{r}
	library(ggplot2)
    ggplot(data = mpg) + 
      geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
    ```
	The error in this code is ', color = "blue"' is incorrectly coded as an arguement for the aes() function, and should be coded as an arguement for the 
	geom_point() function. Putting it in the mapping = aes(...,...) is saying to add the item 'color' labeled, 'blue' to the map, and not change the aesthetics.

2.  Which variables in `mpg` are categorical? Which variables are continuous? 
    (Hint: type `?mpg` to read the documentation for the dataset). How
    can you see this information when you run `mpg`?

    Answer: 

    ```{r}
	?mpg
	summary(mpg)
	str(mpg)
    ```
	The following variables are categorical:  Manufacturer, Model, trans,drv,fl,class
	The following variables are continuous: cty,hwy,year,cyl,displ,
	Note: even though year is numeric, it is considered categorical and not time base continuous although you have to make it a factor.
	
	

3.  Map a continuous variable to `color`, `size`, and `shape`. How do
    these aesthetics behave differently for categorical vs. continuous
    variables? 
    
    Answer: 

    ```{r}
	ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,color = hwy))
	Plots with large gradient of colors that are difficult to discern in the plot.
	
	ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,size = hwy))
	Plots with sizes being smaller with the lower values, and larger with higher values. Size is appropiate with continuous variables.
	
	ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,shape = hwy))
	Error: A continuous variable can not be mapped to shape.

    ```
	Overall, certain aesthetics are designed for continuous(size) variables and other with categorical(shape)
	In cases where the code allows both, results can be unclear and hard to distinguish.

4.  What happens if you map the same variable to multiple aesthetics? 

    Answer: 

    ```{r}
	ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,shape = class,color=class,size=class))
	Warning messages:
	1: Using size for a discrete variable is not advised. 
	2: The shape palette can deal with a maximum of 6 discrete values because more than 6 becomes difficult to discriminate; you have 7. Consider specifying shapes manually if you must have them. 
	3: Removed 62 rows containing missing values (geom_point). 
	
	ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,shape = hwy,color=hwy,size=hwy))
	Error: A continuous variable can not be mapped to shape
    ```
	Using a categorical variable, the plot is generated, however some rows are removed, and results are not clear and concise.
	Using a continuous vairable, the plot is not generated due to errors.

	
5.  What does the `stroke` aesthetic do? What shapes does it work with?
    (Hint: use `?geom_point`)
    
    Answer: 

    ```{r}
	The 'stroke' aesthetic modifies the width of the borders for the following shapes: 
	It works with all shapes.

    ```

6.  What happens if you map an aesthetic to something other than a variable 
    name, like `aes(colour = displ < 5)`?  

    Answer: 

    ```{r}
	ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,color = displ < 5))
    ```
	It color codes the boolean TRUE /FALSE of the expression. So if displ is < 5 then false and is one color, else true and another color.

# Exercise 2

1.  What do the empty cells in plot with `facet_grid(drv ~ cyl)` mean?
    How do they relate to this plot?
    
    ```{r, eval = FALSE}
    ggplot(data = mpg) + 
      geom_point(mapping = aes(x = drv, y = cyl))
    ```

    Answer: 

    ```{r}

    ```

2.  What plots does the following code make? What does `.` do?

    ```{r eval = FALSE}
    ggplot(data = mpg) + 
      geom_point(mapping = aes(x = displ, y = hwy)) +
      facet_grid(drv ~ .)
    
    ggplot(data = mpg) + 
      geom_point(mapping = aes(x = displ, y = hwy)) +
      facet_grid(. ~ cyl)
    ```

    Answer: 

    ```{r}

    ```

3.  Take the first faceted plot in this section:

    ```{r, eval = FALSE}
    ggplot(data = mpg) + 
      geom_point(mapping = aes(x = displ, y = hwy)) + 
      facet_wrap(~ class, nrow = 2)
    ```
    
    What are the advantages to using faceting instead of the colour aesthetic?
    What are the disadvantages? How might the balance change if you had a 
    larger dataset?
    
    Answer: 

    ```{r}

    ```

# Exercise 3

1.  What geom would you use to draw a line chart? A boxplot? 
    A histogram? An area chart?

    Answer: 

    ```{r}

    ```

2.  Run this code in your head and predict what the output will look like.
    Then, run the code in R and check your predictions.
    
    ```{r, eval = FALSE}
    ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + 
      geom_point() + 
      geom_smooth(se = FALSE)
    ```

    Answer: 

    ```{r}

    ```

3.  What does `show.legend = FALSE` do?  What happens if you remove it?  
    Why do you think I used it earlier in the chapter?

    Answer: 

    ```{r}

    ```

4.  What does the `se` argument to `geom_smooth()` do?


    Answer: 

    ```{r}

    ```

5.  Will these two graphs look different? Why/why not?

    ```{r, eval = FALSE}
    ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
      geom_point() + 
      geom_smooth()
    
    ggplot() + 
      geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) + 
      geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))
    ```

    Answer: 

    ```{r}

    ```

6.  Recreate the R code necessary to generate the following graphs.
    
    ![Smooth lines for each `drv`](`r "https://github.com/datasci611/datasci_src/blob/master/HW1P0306A.png?raw=true"`)
    
    
    Answer: 
    
    ```{r, echo=TRUE, eval=TRUE}

    ```


    ![A single smooth line, transparency by `year`](`r "https://github.com/datasci611/datasci_src/blob/master/HW1P0306B.png?raw=true"`)
    
    Answer: 
    
    ```{r, echo=TRUE, eval=TRUE}

    ```

    
    ![Layered dots and an additional text information](`r "https://github.com/datasci611/datasci_src/blob/master/HW1P0306C.png?raw=true"`)
    
    Adding texts was not covered in class, but give it a try!
    
    Answer: 
    
    ```{r, echo=TRUE, eval=TRUE}

    ```

# Exercise 4

1.  What is the default geom associated with `stat_summary()`? How could
    you rewrite the previous plot to use that geom function instead of the 
    stat function?

    Answer: 

    ```{r}

    ```

2.  What does `geom_col()` do? How is it different to `geom_bar()`?

    Answer: 

    ```{r}

    ```

3.  What variables does `stat_smooth()` compute? What parameters control
    its behaviour?

    Answer: 

    ```{r}

    ```

# Exercise 5

1.  What is the problem with this plot? How could you improve it?

    ```{r}
    ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) + 
      geom_point()
    ```

    Answer: 

    ```{r}

    ```

2.  What parameters to `geom_jitter()` control the amount of jittering?

    Answer: 

    ```{r}

    ```

3.  Compare and contrast `geom_jitter()` with `geom_count()`.

    Answer: 

    ```{r}

    ```

# Exercise 6

1.  Turn a stacked bar chart into a pie chart using `coord_polar()`.

    Answer: 

    ```{r}

    ```

2.  What does `labs()` do? Read the documentation.

    Answer: 

    ```{r}

    ```

3.  What does the plot below tell you about the relationship between city
    and highway mpg? Why is `coord_fixed()` important? What does 
    `geom_abline()` do?
    
    ```{r, fig.asp = 1, out.width = "50%"}
    ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
      geom_point() + 
      geom_abline() +
      coord_fixed()
    ```

    Answer: 

    ```{r}

    ```
